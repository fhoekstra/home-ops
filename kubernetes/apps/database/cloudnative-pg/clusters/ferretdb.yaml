# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: ferretdb-pg-cluster
spec:
  instances: 3
  imageName: "ghcr.io/ferretdb/postgres-documentdb:17-0.106.0-ferretdb-2.5.0"
  postgresUID: 999
  postgresGID: 999

  enableSuperuserAccess: true
  superuserSecret:
    name: ferretdb-postgres-pw

  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 45m

  storage:
    size: 1Gi
    storageClass: local-hostpath

  postgresql:
    shared_preload_libraries:
      - pg_cron
      - pg_documentdb_core
      - pg_documentdb
    parameters:
      cron.database_name: "postgres"
    pg_hba:
      - host postgres postgres 127.0.0.1/32 trust
      - host postgres postgres ::1/128 trust

  bootstrap:
    initdb:
      postInitSQL:
        - "CREATE EXTENSION IF NOT EXISTS documentdb CASCADE;"
        - "GRANT USAGE ON SCHEMA documentdb_core TO postgres;"
        - "GRANT SELECT ON ALL TABLES IN SCHEMA documentdb_core TO postgres;"
        - "ALTER DEFAULT PRIVILEGES IN SCHEMA documentdb_core GRANT SELECT ON TABLES TO postgres;"
        - "CREATE ROLE streaming_replica;"
        - "GRANT postgres TO streaming_replica;"
    # recovery:
    #   source: &currentServer ferretdb-0

#   backup:
#     retentionPolicy: 30d
#     barmanObjectStore: &barmanObjectStore
#       destinationPath: s3://cnpg/ferretdb/
#       endpointURL: http://versity.storage.svc.cluster.local:7070
#       serverName: &currentServer ferretdb-0
#       s3Credentials:
#         accessKeyId:
#           name: s3-creds
#           key: ACCESS_KEY_ID
#         secretAccessKey:
#           name: s3-creds
#           key: SECRET_KEY
#
#   # Note: externalClusters is needed when recovering from an existing cnpg cluster
#   externalClusters:
#     - name: *currentServer
#       barmanObjectStore:
#         <<: *barmanObjectStore
#         serverName: *currentServer
# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/scheduledbackup_v1.json
# apiVersion: postgresql.cnpg.io/v1
# kind: ScheduledBackup
# metadata:
#   name: ferretdb
# spec:
#   backupOwnerReference: self
#   cluster:
#     name: ferretdb-pg-cluster
#   method: barmanObjectStore
#   schedule: "0 0 1 * * *"
#   immediate: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ferretdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ferretdb
  template:
    metadata:
      labels:
        app: ferretdb
    spec:
      containers:
        - name: ferretdb
          image: ghcr.io/ferretdb/ferretdb:2.5.0
          ports:
            - containerPort: 27017
          env:
            - name: FERRETDB_POSTGRESQL_URL
              valueFrom:
                secretKeyRef:
                  name: ferretdb-postgres-pw
                  key: uri
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 15m

---
apiVersion: v1
kind: Service
metadata:
  name: ferretdb-service
spec:
  selector:
    app: ferretdb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
