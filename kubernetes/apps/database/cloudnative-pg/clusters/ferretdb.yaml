apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: ferretdb-pg-cluster
spec:
  instances: 3
  imageName: "ghcr.io/ferretdb/postgres-documentdb:17-0.102.0-ferretdb-2.1.0"
  postgresUID: 999
  postgresGID: 999

  enableSuperuserAccess: true
  superuserSecret:
    name: ferretdb-postgres-pw

  storage:
    size: 1Gi
    storageClass: local-hostpath

  postgresql:
    shared_preload_libraries:
      - pg_cron
      - pg_documentdb_core
      - pg_documentdb
    parameters:
      cron.database_name: "postgres"
    pg_hba:
      - host postgres postgres 127.0.0.1/32 trust
      - host postgres postgres ::1/128 trust

  bootstrap:
    initdb:
      postInitSQL:
        - "CREATE EXTENSION IF NOT EXISTS documentdb CASCADE;"
        - "GRANT USAGE ON SCHEMA documentdb_core TO postgres;"
        - "GRANT SELECT ON ALL TABLES IN SCHEMA documentdb_core TO postgres;"
        - "ALTER DEFAULT PRIVILEGES IN SCHEMA documentdb_core GRANT SELECT ON TABLES TO postgres;"
    # Note: previousCluster needs to be set to the name of the previous
    # cluster when recovering from an existing cnpg cluster
    # upgrade or recover from another running instance
    # recovery:
    #   source: &previousCluster kochhaus-v1

  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cnpg/ferretdb/
      endpointURL: http://ferret-db.database.svc.cluster.local:27017
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster ferretdb-v1
      s3Credentials:
        accessKeyId:
          name: s3-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: s3-creds
          key: SECRET_KEY

  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ferretdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ferretdb
  template:
    metadata:
      labels:
        app: ferretdb
    spec:
      containers:
        - name: ferretdb
          image: ghcr.io/ferretdb/ferretdb:2.1.0
          ports:
            - containerPort: 27017
          env:
            - name: FERRETDB_POSTGRESQL_URL
              valueFrom:
                secretKeyRef:
                  name: ferretdb-postgres-pw
                  key: uri
---
apiVersion: v1
kind: Service
metadata:
  name: ferretdb-service
spec:
  selector:
    app: ferretdb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: NodePort
