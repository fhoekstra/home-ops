# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgresql.cnpg.io/imagecatalog_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: ImageCatalog
metadata:
  name: documentdb-postgres
spec:
  images:
    - major: 17
      image: ghcr.io/ferretdb/postgres-documentdb:17-0.106.0-ferretdb-2.5.0
---
# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: ferretdb-pg-cluster
spec:
  imageCatalogRef:
    apiGroup: postgresql.cnpg.io
    kind: ImageCatalog
    name: documentdb-postgres
    major: 17

  instances: 3

  # Needed to make postgres-documentdb run at all, thank this comment for figuring this out:
  # https://github.com/FerretDB/FerretDB/issues/4765#issuecomment-2701765707
  postgresUID: 999
  postgresGID: 999

  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 50m

  storage:
    size: 10Gi
    storageClass: local-hostpath

  postgresql:
    shared_preload_libraries:
      - pg_cron
      - pg_documentdb_core
      - pg_documentdb
    parameters:
      # Got this from pg_cron docs
      cron.database_name: ferretDB
      # Copied from https://github.com/FerretDB/documentdb/blob/ferretdb/packaging/10-preload.sh
      documentdb.enableCompact: "true"
      documentdb.enableLetAndCollationForQueryMatch: "true"
      documentdb.enableNowSystemVariable: "true"
      documentdb.enableSortbyIdPushDownToPrimaryKey: "true"
      documentdb.enableSchemaValidation: "true"
      documentdb.enableBypassDocumentValidation: "true"
      documentdb.enableUserCrud: "true"
      documentdb.maxUserLimit: "100"
    pg_hba:
      # Fix for pg_cron, seems like it always runs from postgres user
      - host ferretDB postgres localhost trust
      # Fix FerretDB fe_sendauth error
      - host ferretDB ferret localhost trust
  bootstrap:
    initdb:
      database: ferretDB
      owner: ferret
      postInitApplicationSQL:
        - create extension if not exists pg_cron;
        - create extension if not exists documentdb cascade;
        # Instead of doing a bunch of grants on different schemas you can just grant an included role
        - grant documentdb_admin_role to ferret;
# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/scheduledbackup_v1.json
# apiVersion: postgresql.cnpg.io/v1
# kind: ScheduledBackup
# metadata:
#   name: ferretdb
# spec:
#   backupOwnerReference: self
#   cluster:
#     name: ferretdb-pg-cluster
#   method: barmanObjectStore
#   schedule: "0 0 1 * * *"
#   immediate: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ferretdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ferretdb
  template:
    metadata:
      labels:
        app: ferretdb
    spec:
      containers:
        - name: ferretdb
          image: ghcr.io/ferretdb/ferretdb:2.5.0
          ports:
            - containerPort: 27017
          env:
            - name: FERRETDB_POSTGRESQL_URL
              valueFrom:
                secretKeyRef:
                  name: ferretdb-pg-cluster-app
                  key: uri
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 15m

---
apiVersion: v1
kind: Service
metadata:
  name: ferretdb-service
spec:
  selector:
    app: ferretdb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: NodePort
