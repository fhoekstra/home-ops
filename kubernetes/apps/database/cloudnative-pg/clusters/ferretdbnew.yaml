# yaml-language-server: $schema=https://github.com/datreeio/CRDs-catalog/raw/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: ferretdb-new-pg-cluster
spec:
  instances: 2
  imageName: "ghcr.io/ferretdb/postgres-documentdb:17-0.106.0-ferretdb-2.5.0"
  postgresUID: 999
  postgresGID: 999

  enableSuperuserAccess: true
  superuserSecret:
    name: ferretdb-postgres-pw

  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 50m

  storage:
    size: 1Gi
    storageClass: local-hostpath

  postgresql:
    shared_preload_libraries:
      - pg_cron
      - pg_documentdb_core
      - pg_documentdb
    parameters:
      cron.database_name: "postgres"
    pg_hba:
      - host postgres postgres 127.0.0.1/32 trust
      - host postgres postgres ::1/128 trust

  bootstrap:
    initdb: {}
    # Note: previousCluster needs to be set to the name of the previous
    # cluster when recovering from an existing cnpg cluster
    # upgrade or recover from another running instance
    # recovery:
    #   source: &previousCluster kochhaus-v1

  # # Disable backup for now due to bugs with schema permissions for CNPG's replication user
  # backup:
  #   retentionPolicy: 30d
  #   barmanObjectStore: &barmanObjectStore
  #     data:
  #       compression: bzip2
  #     wal:
  #       compression: bzip2
  #       maxParallel: 8
  #     destinationPath: s3://cnpg/ferretdb/
  #     endpointURL: http://versity.storage.svc.cluster.local:7070
  #     # Note: serverName version needs to be incremented
  #     # when recovering from an existing cnpg cluster
  #     serverName: &currentCluster ferretdb-v1
  #     s3Credentials:
  #       accessKeyId:
  #         name: s3-creds
  #         key: ACCESS_KEY_ID
  #       secretAccessKey:
  #         name: s3-creds
  #         key: SECRET_KEY

  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ferretdb-new
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ferretdb-new
  template:
    metadata:
      labels:
        app: ferretdb-new
    spec:
      containers:
        - name: ferretdb
          image: ghcr.io/ferretdb/ferretdb:2.5.0
          ports:
            - containerPort: 27017
          env:
            - name: FERRETDB_POSTGRESQL_URL
              valueFrom:
                secretKeyRef:
                  name: ferretdb-postgres-pw
                  key: uri
          resources:
            requests:
              cpu: 75m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 128Mi

---
apiVersion: v1
kind: Service
metadata:
  name: ferretdb-new-service
spec:
  selector:
    app: ferretdb-new
  ports:
    - protocol: TCP
      port: 27018
      targetPort: 27017
  type: NodePort
